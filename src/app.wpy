<style lang='less'>
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
  background-color: #f6f6f6;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import { isEmptyObject, dataFormat, checkSettingStatu } from './util/util'
import tip from './util/tip'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/square',
      'pages/balance',
      'pages/sqa',
      'pages/my-history',
      'pages/pack-detail',
      'pages/share',
      'pages/complaints'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#d95940',
      navigationBarTitleText: '小槽姐',
      navigationBarTextStyle: '#fff',
      backgroundColor: '#eaeaea'
    },
    tabBar: {
      color: '#9a9a9a',
      backgroundColor: '#ffffff',
      selectedColor: '#de7765',
      borderStyle: 'black',
      list: [
        {
          pagePath: 'pages/index',
          text: '请你帮忙',
          iconPath: 'images/icon-new.png',
          selectedIconPath: 'images/icon-new-active.png'
        },
        {
          pagePath: 'pages/my-history',
          text: '我的记录',
          iconPath: 'images/icon-history.png',
          selectedIconPath: 'images/icon-history-active.png'
        },
        {
          pagePath: 'pages/square',
          text: '解忧广场',
          iconPath: 'images/icon-square.png',
          selectedIconPath: 'images/icon-square-active.png'
        },
        {
          pagePath: 'pages/balance',
          text: '余额提现',
          iconPath: 'images/icon-balance.png',
          selectedIconPath: 'images/icon-balance-active.png'
        }
      ]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor() {
    super()
    this.use('requestfix')
    this.use('promisify')

    // 全局拦截与后端请求的数据，这也是为什么会在app.wpy我要写一个commentRequest方法的原因
    // this.intercept('request', {
    //   config(p) {
    //     return p
    //   },
    //   success(res) {
    //     if (res.data.code == 200 ) {
    //       return res.data.records
    //     }
    //   },
    //   fail(p) {
    //     console.log(p)
    //     return p
    //   }
    // })
  }
  async login () { 
    let wxLoginState = await wepy.checkSession().then(res => { return true }, res => { return false })
    let token = wx.getStorageSync('token')
    if (!wxLoginState || !token) {
      let that = this
      let resp = await wepy.login()
      let encryptedData
      let iv
      if (resp.code) {
        await wepy.getUserInfo({withCredentials: true}).then(res => {
          encryptedData = res.encryptedData
          iv = res.iv
          that.globalData.userInfo = res.userInfo
          wepy.setStorageSync('userInfo', res.userInfo)
        }).catch(res => {
          console.log(res)
          that.checkSettingStatu()
        })
        tip.loading()
        await wepy.request({
          url: 'https://m.tdamm.com/weapp/member/login',
          method: 'POST',
          data: {
            code: resp.code,
            encryptedData: encryptedData,
            iv: iv,
            type: 'trouble' 
          },
          header: {
            'Content-Type': 'application/x-www-form-urlencoded'
          }
        })
        .then(res => {
          if (res.data.code == 200) {
            if (res.data.token) {
              let token = encodeURIComponent(res.data.token)
              let uid = res.data.uid
              wepy.setStorageSync('token', token)
              wepy.setStorageSync('uid', uid)
            }
          } else {
            tip.alert('登录失败')
          }
          
        }).catch(data => {
          console.log(data)
        })
        tip.loaded()
      }
    } else {
      return false
    }
  }
  async checkLoginState() {
    // 微信自己的code 状态
    let wxLoginState = await wepy.checkSession().then(res => { return true }, res => { return false })
    let token = wx.getStorageSync('token')
    if (!wxLoginState || !token) {
      return await this.login()
    } else {
      return false
    }
  }
  async checkSettingStatu() {
    let that = this
    // 判断是否是第一次授权，非第一次授权且授权失败则进行提醒
    await wepy.getSetting().then(res =>{
      let authSetting = res.authSetting
      if(isEmptyObject(authSetting)) {
        that.login()
      } else {
        if (authSetting['scope.userInfo'] === false) {
          wepy.showModal({
            title: '用户未授权',
            content: '如需正常使用该功能，请按确定并在授权管理中选中“用户信息”，然后点按确定。最后再重新进入小程序即可正常使用。',
            showCancel: false
          }).then(res => {
            if (res.confirm) {
              wepy.openSetting().then(res => {
                if (res.authSetting['scope.userInfo']) {
                  that.login()
                }
              })
            }
          })
          
        }
      }
    })
  }
}
</script>
