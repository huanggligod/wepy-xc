<style lang="less">
  page {
    height: 100%;
    background: #f6f6f6;
  }
  .my-history {
    height: 100%;
    
    .tab-menu {
      width: 100%;
      display: flex;
      height: 100rpx;
      align-items: center;
      justify-content: space-around;
      background-color: #fff;
      
      .tab-list {
        font-size: 30rpx;
        color: #9a9a9a;
        
        height: 100rpx;
        line-height: 100rpx;
        box-sizing: border-box;

        &.active {
          color: #d95940;
          border-bottom: 4rpx solid #d95940;
        }
      }

    }
    swiper {
      box-sizing: border-box;
      min-height: 90%;
    }
    .swiper-item {
      width: 100%;
      overflow-y: auto;
    }
    .lists {
      margin-top: 30rpx;
    }
    .empty {
      position: relative;
      bottom: -10rpx;
      margin: 20rpx 0;
      width: 100%;
      text-align: center;
      text {
        color: #666;
        font-size: 40rpx;
        margin-left: 30rpx;
      }
    }

    .icon-xl {
        width: 140rpx;
        height: 148rpx;
        display: block;
        margin: 0 auto;
    }

    .txt {
        font-size: 26rpx;
        color: #888888;
    }
  }
</style>
<template>
  <view class="my-history">
    <view class="tab-menu" >
      <view class="tab-list + {{current==0?'active':''}}" data-id="0" @tap="getId">我的问题</view>
      <view class="tab-list + {{current==1?'active':''}}" data-id="1" @tap="getId">我的回复</view>
    </view>
    <swiper duration="{{duration}}" current="{{current}}" bindchange="changeCurrent">
      <swiper-item class="swiper-item">
        <scroll-view scroll-y style="height: 100%;" @scrolltolower="sendLoadMore">
          <receivePanel :userInfo.sync="userInfo" :current.sync="current" :num.sync="receiveNum" :money.sync="receiveMoney"></receivePanel>
          <view class="lists">
            <receiveList :isEmpty.sync="isEmpty" :receiveList.sync="receiveList"></receiveList>
          </view>
          <view class="empty" wx:if="{{isEmpty}}">
            <view class="txt">亲，没有更多内容啦</view>
          </view>
        </scroll-view>
      </swiper-item>
      <swiper-item class="swiper-item">
        <scroll-view scroll-y style="height: 100%;" @scrolltolower="replyLoadMore">
          <replyPanel :userInfo.sync="userInfo" :current.sync="current" :num.sync="replyNum" :money.sync="replyMoney"></replyPanel>
          <view class="lists">
            <replyList :replyList.sync="replyList"></replyList>
          </view>
          <view class="empty" wx:if="{{isEmpty2}}">
            <view class="txt">亲，没有更多内容啦</view>
          </view>
        </scroll-view>
      </swiper-item> 
    </swiper>
    
  </view>
</template>

<script>
import wepy from 'wepy'
import { checkSettingStatu } from '../util/util'
import ReceiveList from '../components/receive'
import ReplyList from '../components/reply-list'
import SwiperPanel from '../components/swiper-panel'
import LoadMore from '../components/loadmore'
import Placeholder from '../components/placeholder'
import tip from '../util/tip'

export default class MyHistory extends wepy.page {
  config = {
    navigationBarTitleText: '我的记录',
    enablePullDownRefresh: true,
    backgroundColor: '#d95940'
  }
  components = {
    receiveList: ReceiveList,
    receivePanel: SwiperPanel,
    replyPanel: SwiperPanel,
    replyList: ReplyList,
    bottomLoadMore: LoadMore,
    placeholder: Placeholder
  }
  data = {
    userInfo: '',
    duration: '500',
    current: '0',
    receiveNum: '',
    receiveMoney: '',
    replyNum: '',
    replyMoney: '',
    token: '',
    sendPage: '',
    replyPage: '',
    sendTotal: '',
    replyTotal: '',
    isEmpty: false,
    isEmpty2: false,
    preventRepeatReuqest: false,
    receiveList: [],
    replyList: [],
    receiveUrl: 'https://m.tdamm.com/weapp/api/trouble/send_records?token=',
    repllyUrl: 'https://m.tdamm.com/weapp/api/trouble/get_records?token='
  }
  async onLoad () {
    let that = this
    let userInfo = await wepy.getStorageSync('userInfo')
    that.userInfo = userInfo
    this.sendPage = 1
    this.replyPage = 1
    this.$apply()
  }
  async onShow () {
    checkSettingStatu()
    this.isEmpty = false
    this.isEmpty2 = false
    this.token = await wepy.getStorageSync('token')
    await this.onPullDownRefresh()
  }
  async getUserSendData () {
    let that = this
    await wepy.request({
      url: 'https://m.tdamm.com/weapp/api/trouble/user_data_for_send?token=' + that.token,
      method: 'POST',
      header: {
        'Content-Type': 'application/x-www-form-urlencoded'
      }
    }).then(res => {
      that.receiveNum = res.data.total_num
      that.receiveMoney = res.data.total_amount
      that.$apply()
    }).catch(res => {
      console.log(res)
    })

  }
  async getUserSendList () {
    let that = this
    that.sendPage = 1
    tip.loading()
    await wepy.request({
      url: 'https://m.tdamm.com/weapp/api/trouble/send_records?token=' + that.token,
      method: 'POST',
      data: {
        page: that.sendPage
      },
      header: {
        'Content-Type': 'application/x-www-form-urlencoded'
      }
    }).then(res => {
      that.sendTotal = res.data.total_page
      that.receiveList = res.data.records
      that.$apply()
    }).catch(res => {
      console.log(res)
    })
    tip.loaded()
  }
  async getUserGetList () {
    let that = this
    that.replyPage = 1
    tip.loading()
    await wepy.request({
      url: 'https://m.tdamm.com/weapp/api/trouble/get_records?token=' + that.token,
      method: 'POST',
      data: {
        page: that.replyPage
      },
      header: {
        'Content-Type': 'application/x-www-form-urlencoded'
      }
    }).then(res => {
      console.log(res)
      that.replyTotal = res.data.total_page
      that.replyList = res.data.records
      that.$apply()
    }).catch(res => {
      console.log(res)
    })
    tip.loaded()
  }
  async getUserGetData () {
    let that = this
    that.sendPage = 1
    await wepy.request({
      url: 'https://m.tdamm.com/weapp/api/trouble/user_data_for_get?token=' + that.token,
      method: 'POST',
      header: {
        'Content-Type': 'application/x-www-form-urlencoded'
      }
    }).then(res => {
      console.log(res)
      that.replyNum = res.data.total_num
      that.replyMoney = res.data.total_amount
      that.$apply()
    }).catch(res => {
      console.log(res)
    })

  }
  methods = {
    changeCurrent: function(e) {
      let that = this
      let cur = e.detail.current
      that.current = cur
      if (that.current == 1) {
        that.getUserGetData()
        that.getUserGetList()
      }
    },
    getId: function(e) {
      let that = this
      let id = e.currentTarget.dataset.id
      that.current = id
    },
    sendLoadMore() {
      let that = this
      let total = that.sendTotal
      let page = that.sendPage + 1
      if (total >= page) {
        tip.loading()
        // 防止重复加载
        if (that.preventRepeatReuqest) {
          return true
        }
        that.preventRepeatReuqest = true
        that.sendPage++
        wepy.request({
          url: 'https://m.tdamm.com/weapp/api/trouble/send_records?token=' + that.token,
          method: 'POST',
          data : {
            page: page
          },
          header: {
            'Content-Type': 'application/x-www-form-urlencoded'
          }
        }).then(res => {
          that.receiveList = [...that.receiveList, ...res.data.records]
          this.$apply()
        }).catch(res => {
          console.log(res)
        })
        that.preventRepeatReuqest = false
        tip.loaded()
      } else {
        that.isEmpty = true
        that.$apply()
      }
    },
    replyLoadMore() {
      let that = this
      let total = that.replyTotal
      let page = that.replyPage + 1
      if (total >= page) {
        tip.loading()
        // 防止重复加载
        if (that.preventRepeatReuqest) {
          return true
        }
        that.preventRepeatReuqest = true
        that.replyPage++
        wepy.request({
          url: 'https://m.tdamm.com/weapp/api/trouble/get_records?token=' + that.token,
          method: 'POST',
          data : {
            page: page
          },
          header: {
            'Content-Type': 'application/x-www-form-urlencoded'
          }
        }).then(res => {
          that.replyList = [...that.replyList, ...res.data.records]
          this.$apply()
        }).catch(res => {
          console.log(res)
        })
        that.preventRepeatReuqest = false
        tip.loaded()
      } else {
        that.isEmpty2 = true
        that.$apply()
      }
    }
  }
  async onPullDownRefresh(){
    let that = this
    if(that.current == 0) {
      await that.getUserSendData()
      await that.getUserSendList()
    }
    if (that.current == 1) {
      await that.getUserGetData()
      await that.getUserGetList()
    }
    wx.stopPullDownRefresh()
  }

  
}
</script>
