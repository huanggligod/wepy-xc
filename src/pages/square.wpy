<style lang="less">
  .square-head {
    width: 100%;
    background: #d95940;
    display: flex;
    padding: 20rpx 0;
    .head-logo {
      padding: 0 32rpx;
      text-align: center;

      .logo-pic {
        width: 93rpx;
        height: 108rpx;
      }
      text{
        display: block;
        color: #fff;
        font-size: 30rpx;
      }
    }
    .mes-bar {
      display: flex;
      align-items: center;
       justify-content: space-around;
      width: 512rpx;
      background: #fff;
      padding: 30rpx 0;
      box-sizing: border-box;
      border-radius: 10rpx;
      .mes-item {  
        text {
          display: block;
          text-align: center;
          line-height: 1.5;
          &.num {
            font-size: 36rpx;
            color: #000;
          }

          &.tit {
            font-size: 26rpx;
            color: #a9a9a9;
          }
        }
      }
    }
  }
  .proble-items {
    position: relative;
    width: 100%;
    padding: 40rpx 15rpx;
    box-sizing: border-box;
    min-height: 950rpx;
    &:after {
      content: '';
      display: block;
      clear: both;
    }
    .proble-item {
      width: 330rpx;
      float: left;
      margin: 0 15rpx 30rpx;
    }
    .item-top {
      background: #ffff;
      display: flex;
      align-items: center;
      border-top-left-radius: 10rpx;
      border-top-right-radius: 10rpx;
      padding: 10rpx 20rpx;
      box-sizing: border-box;
      image {
        width: 80rpx;
        height: 80rpx;
        border-radius: 8rpx;
      }
      text {
        display: block;
        font-size: 24rpx;
        color: #545454;
        margin-left: 16rpx;
        line-height: 1.5;
      }
    }

    .item-info {
      width: 100%;
      padding: 28rpx 22rpx;
      background: #d95940;
      box-sizing: border-box;
      border-bottom-left-radius: 10rpx;
      border-bottom-right-radius: 10rpx; 
      &.hui {
        background: #f58670;
      }
      .title {
        color: #fff;
        font-size: 30rpx;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        word-wrap: break-word;
        overflow: hidden;
        -webkit-box-pack: center;
        height: 77rpx;
        overflow: hidden;
        line-height: 1.2;
      }
      .info-mes {
        margin-top: 50rpx;
        font-size: 24rpx;
        color: #fff;
      }
    }
  }
</style>
<template>
  <view class="container">
    <view class="square-head">
      <view class="head-logo">
        <image class="logo-pic" src="../images/square-logo.png"></image>
        <text>大家帮一帮</text>
      </view>
      <view class="mes-bar">
        <view class="mes-item">
          <text class="num">{{totalNum}}</text>
          <text class="tit">提问数量</text>
        </view>
        <view class="mes-item">
          <text class="num">{{grabNum}}</text>
          <text class="tit">帮忙人次</text>
        </view>
        <view class="mes-item">
          <text class="num">{{pvNum}}</text>
          <text class="tit">累计答谢金</text>
        </view>
      </view> 
    </view>
    <view class="proble-items">
      <block wx:if="{{probleItems.length > 0 }}">
        <view class="proble-item" wx:for="{{probleItems}}">
          <navigator url="/pages/pack-detail?id={{item.id}}">
            <view class="item-top">
              <image src="{{item.headimg}}"></image>
              <view>
                <text class="name">来自 {{item.nickName}}</text> 
                <text class="time">{{item.time}}</text>
              </view>
            </view>
            <view class="item-info + {{ item.status==2?'':'hui'}}">
              <text class="title">{{item.words}}</text>
              <view class="info-mes">{{item.amount}}元{{item.redpack_num}}份， 剩余{{item.redpack_num - item.grab_num}}份</view>
            </view>
          </navigator> 
        </view>  
      </block>
      <!--加载更多时动画-->
      <bottomLoadMore :showLoading.sync="showLoading" message="正在加载"></bottomLoadMore>
      <!--暂无数据显示-->
      <placeholder :isEmpty.sync="isEmpty" message="暂无发现数据"></placeholder>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import { checkSettingStatu } from '../util/util'
import shareMessage from '../mixins/shareMessage'
import tip from '../util/tip'
import LoadMore from '../components/loadmore'
import Placeholder from '../components/placeholder'

export default class Square extends wepy.page {
  config = {
    navigationBarTitleText: '解忧广场',
    enablePullDownRefresh: true,
    backgroundColor: '#d95940'
  }
  mixins = [shareMessage]
  components = {
    bottomLoadMore: LoadMore,
    placeholder: Placeholder
  }
  data = {
    totalNum: '',
    grabNum: '',
    pvNum: '',
    page: '',
    token: '',
    total_page: '',
    showLoading: false,
    isEmpty: false,
    preventRepeatReuqest: false,
    probleItems: []
  }
  async onLoad () {
    
  }
  async onShow () {
    checkSettingStatu()
    this.isEmpty = false
    this.token = await wepy.getStorageSync('token')
    await this.onPullDownRefresh()
  }
  async getBaseData () {
    let that = this 
    await wepy.request({
      url: 'https://m.tdamm.com/weapp/api/trouble/get_square_base_data?token=' + this.token,
      method: 'POST',
      header: {
        'Content-Type': 'application/x-www-form-urlencoded'
      }
    }).then(res => {
      console.log(res)
      that.totalNum = res.data.total_num
      that.grabNum = res.data.grab_num
      that.pvNum = res.data.grab_num
      that.$apply()
    }).catch(res => {
      console.log(res)
    })
  }

  async getSquareData () {
    let that = this
    that.page = 1
    tip.loading()
    await wepy.request({
      url: 'https://m.tdamm.com/weapp/api/trouble/get_square_data?token=' + this.token,
      method: 'POST',
      data: {
        page: that.page
      },
      header: {
        'Content-Type': 'application/x-www-form-urlencoded'
      }
    }).then(res => {
      console.log(res)
      that.total_page = res.data.total_page
      that.probleItems = res.data.records
      that.$apply()
    })
    tip.loaded()
  }
  methods = {  
  }
  async onPullDownRefresh(){
    let that = this
    await that.getBaseData()
    await that.getSquareData()
    wx.stopPullDownRefresh()
  }
  async onReachBottom() {
    let that = this
    if (that.total_page > that.page) {
      if (that.preventRepeatReuqest) {
        return
      }
      that.preventRepeatReuqest = true
      that.page++
      tip.loading()
      await wepy.request({
        url: 'https://m.tdamm.com/weapp/api/trouble/get_square_data?token=' + this.token,
        method: 'POST',
        data: {
          page: that.page
        },
        header: {
          'Content-Type': 'application/x-www-form-urlencoded'
        }
      }).then(res => {
        console.log(res)
        that.total_page = res.data.total_page
        that.probleItems = [...that.probleItems, ...res.data.records]
        that.$apply()
      })
      tip.loaded()
    } else {
      that.isEmpty = true
    }
    console.log(that.isEmpty)
  }
}
</script>
